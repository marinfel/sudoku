/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sudoku.comm.generated;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Message extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Message\",\"namespace\":\"com.sudoku.comm.generated\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"login\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"listIps\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}]}");
  @Deprecated
  public java.lang.String uuid;
  @Deprecated
  public java.lang.String login;
  @Deprecated
  public java.util.List<java.lang.String> listIps;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Message() {
  }

  /**
   * All-args constructor.
   */
  public Message(java.lang.String uuid, java.lang.String login, java.util.List<java.lang.String> listIps) {
    this.uuid = uuid;
    this.login = login;
    this.listIps = listIps;
  }

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  /**
   * Creates a new Message RecordBuilder
   */
  public static com.sudoku.comm.generated.Message.Builder newBuilder() {
    return new com.sudoku.comm.generated.Message.Builder();
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Builder
   */
  public static com.sudoku.comm.generated.Message.Builder newBuilder(com.sudoku.comm.generated.Message.Builder other) {
    return new com.sudoku.comm.generated.Message.Builder(other);
  }

  /**
   * Creates a new Message RecordBuilder by copying an existing Message instance
   */
  public static com.sudoku.comm.generated.Message.Builder newBuilder(com.sudoku.comm.generated.Message other) {
    return new com.sudoku.comm.generated.Message.Builder(other);
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return uuid;
      case 1:
        return login;
      case 2:
        return listIps;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        uuid = (java.lang.String) value$;
        break;
      case 1:
        login = (java.lang.String) value$;
        break;
      case 2:
        listIps = (java.util.List<java.lang.String>) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   *
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'login' field.
   */
  public java.lang.String getLogin() {
    return login;
  }

  /**
   * Sets the value of the 'login' field.
   *
   * @param value the value to set.
   */
  public void setLogin(java.lang.String value) {
    this.login = value;
  }

  /**
   * Gets the value of the 'listIps' field.
   */
  public java.util.List<java.lang.String> getListIps() {
    return listIps;
  }

  /**
   * Sets the value of the 'listIps' field.
   *
   * @param value the value to set.
   */
  public void setListIps(java.util.List<java.lang.String> value) {
    this.listIps = value;
  }

  /**
   * RecordBuilder for Message instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Message>
      implements org.apache.avro.data.RecordBuilder<Message> {

    private java.lang.String uuid;
    private java.lang.String login;
    private java.util.List<java.lang.String> listIps;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(com.sudoku.comm.generated.Message.SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder
     */
    private Builder(com.sudoku.comm.generated.Message.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.login)) {
        this.login = data().deepCopy(fields()[1].schema(), other.login);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.listIps)) {
        this.listIps = data().deepCopy(fields()[2].schema(), other.listIps);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Message instance
     */
    private Builder(com.sudoku.comm.generated.Message other) {
      super(com.sudoku.comm.generated.Message.SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.login)) {
        this.login = data().deepCopy(fields()[1].schema(), other.login);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.listIps)) {
        this.listIps = data().deepCopy(fields()[2].schema(), other.listIps);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Gets the value of the 'uuid' field
     */
    public java.lang.String getUuid() {
      return uuid;
    }

    /**
     * Sets the value of the 'uuid' field
     */
    public com.sudoku.comm.generated.Message.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'uuid' field has been set
     */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'uuid' field
     */
    public com.sudoku.comm.generated.Message.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'login' field
     */
    public java.lang.String getLogin() {
      return login;
    }

    /**
     * Sets the value of the 'login' field
     */
    public com.sudoku.comm.generated.Message.Builder setLogin(java.lang.String value) {
      validate(fields()[1], value);
      this.login = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'login' field has been set
     */
    public boolean hasLogin() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'login' field
     */
    public com.sudoku.comm.generated.Message.Builder clearLogin() {
      login = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'listIps' field
     */
    public java.util.List<java.lang.String> getListIps() {
      return listIps;
    }

    /**
     * Sets the value of the 'listIps' field
     */
    public com.sudoku.comm.generated.Message.Builder setListIps(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.listIps = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'listIps' field has been set
     */
    public boolean hasListIps() {
      return fieldSetFlags()[2];
    }

    /**
     * Clears the value of the 'listIps' field
     */
    public com.sudoku.comm.generated.Message.Builder clearListIps() {
      listIps = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Message build() {
      try {
        Message record = new Message();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.login = fieldSetFlags()[1] ? this.login : (java.lang.String) defaultValue(fields()[1]);
        record.listIps = fieldSetFlags()[2] ? this.listIps : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
